{"version":3,"sources":["observable/zen.js"],"names":["$zen","addZen","node","opts","id","name","val","Gun","soul","data","op","log","args","observer","listener","eventListener","event","next","Error","chain"],"mappings":";;;;;QAGgBA,I,GAAAA,I;QAgCAC,M,GAAAA,M;;AAnChB;;;;;;AAEA;AACO,SAASD,IAAT,CAAcE,IAAd,EAA+B;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AACpC,MAAIC,WAAJ;AAAA,MAAQC,aAAR;AACAH,OAAKI,GAAL,CAAS,gBAAQ;AACfF,SAAKG,IAAIL,IAAJ,CAASM,IAAT,CAAcC,IAAd,CAAL;AACAJ,WAAOF,KAAKE,IAAL,IAAaD,EAAb,IAAmB,SAA1B;AACD,GAHD;;AAKA,MAAMM,KAAKP,KAAKO,EAAL,IAAW,IAAtB;AACA,MAAMC,MAAM,SAANA,GAAM,GAAmB;AAC7B,QAAIR,KAAKQ,GAAT,EAAc;AAAA;;AAAA,wCADSC,IACT;AADSA,YACT;AAAA;;AACZ,2BAAQD,GAAR,kBAAY,MAAZ,EAAoBN,IAApB,SAA6BO,IAA7B;AACD;AACF,GAJD;;AAMA;;AAEA,MAAMC,WAAW,SAAXA,QAAW,CAACC,QAAD,EAAc;AAC7BH,QAAI,OAAJ;AACA,QAAII,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,UAAIF,SAASG,IAAb,EAAmB;AACjBN,YAAI,OAAJ,EAAaK,KAAb;AACAF,iBAASG,IAAT,CAAcD,KAAd;AACD,OAHD,MAGO;AACL,cAAM,IAAIE,KAAJ,CAAU,qCAAV,CAAN;AACD;AACF,KAPD;AAQAhB,SAAKQ,EAAL,EAASK,aAAT;AACD,GAXD;;AAaA,SAAO,4BAAeF,QAAf,CAAP;AACD;;AAEM,SAASZ,MAAT,OAEJ;AAAA,MADDkB,KACC,QADDA,KACC;;AACDA,QAAMnB,IAAN,GAAa,UAAUG,IAAV,EAAgB;AAC3B,WAAOH,KAAK,IAAL,EAAWG,IAAX,CAAP;AACD,GAFD;AAGA,SAAOgB,KAAP;AACD","file":"zen.js","sourcesContent":["import Observable from 'zen-observable';\n\n// See https://github.com/staltz/xstream\nexport function $zen(node, opts = {}) {\n  let id, name\n  node.val(data => {\n    id = Gun.node.soul(data)\n    name = opts.name || id || 'unknown'\n  })\n\n  const op = opts.op || 'on'\n  const log = function (...args) {\n    if (opts.log) {\n      console.log('zen:', name, ...args)\n    }\n  }\n\n  // see Producer https://github.com/staltz/xstream#producer\n\n  const observer = (listener) => {\n    log('start')\n    let eventListener = (event) => {\n      if (listener.next) {\n        log('event', event)\n        listener.next(event)\n      } else {\n        throw new Error('Listener missing next(event) method')\n      }\n    }\n    node[op](eventListener);\n  }\n\n  return new Observable(observer)\n};\n\nexport function addZen({\n  chain\n}) {\n  chain.$zen = function (opts) {\n    return $zen(this, opts)\n  }\n  return chain\n}"]}